{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nexport const useNew = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [links, setLinks] = useState([{\n    name: '',\n    link: ''\n  }]);\n  const [image, setImage] = useState([]);\n  const [body, setBody] = useState('');\n  const [counter, setCounter] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleAddFeild = () => {\n    setCounter(counter + 1);\n    setLinks(prevLinks => [...prevLinks, {\n      name: '',\n      link: ''\n    }]);\n  };\n  const handleChange2 = (index, fieldName, value) => {\n    const updatedInputFields = [...links];\n    updatedInputFields[index][fieldName] = value;\n    setLinks(updatedInputFields);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const backEndLink = process.env.REACT_APP_BACKEND_URL;\n    setIsLoading(true);\n    try {\n      await axios.post(`${backEndLink}/posts`, {\n        image,\n        title,\n        links,\n        body\n      }, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        console.log(res);\n        navigate(`/posts/${res.data.post._id}`);\n      });\n    } catch (err) {\n      console.log(err);\n      alert(err.response.data.message);\n      setIsLoading(false);\n    }\n  };\n  return {\n    handleAddFeild,\n    handleChange2,\n    handleSubmit,\n    title,\n    links,\n    image,\n    body,\n    counter,\n    setBody,\n    setImage,\n    setTitle,\n    setCounter,\n    isLoading\n  };\n};\n_s(useNew, \"rvCJNWHeEMj6MQCmISfnpLEScjU=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","axios","useNew","_s","title","setTitle","links","setLinks","name","link","image","setImage","body","setBody","counter","setCounter","isLoading","setIsLoading","navigate","handleAddFeild","prevLinks","handleChange2","index","fieldName","value","updatedInputFields","handleSubmit","e","preventDefault","backEndLink","process","env","REACT_APP_BACKEND_URL","post","withCredentials","headers","then","res","console","log","data","_id","err","alert","response","message"],"sources":["/Users/adnan/Desktop/projects/setup/src/routes/new/useNew.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n\nexport const useNew = () => {\n  const [title, setTitle] = useState('');\n  const [links, setLinks] = useState([{ name: '', link: '' }]);\n  const [image, setImage] = useState([]);\n  const [body, setBody] = useState('');\n  const [counter, setCounter] = useState(1);\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate();\n\n  const handleAddFeild = () => {\n    setCounter(counter + 1);\n    setLinks((prevLinks) => [...prevLinks, { name: '', link: '' }]);\n  };\n\n  const handleChange2 = (index, fieldName, value) => {\n    const updatedInputFields = [...links];\n    updatedInputFields[index][fieldName] = value;\n\n    setLinks(updatedInputFields);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const backEndLink = process.env.REACT_APP_BACKEND_URL\n    setIsLoading(true)\n    try {\n      await axios\n        .post(\n          `${backEndLink}/posts`,\n          { image, title, links, body },\n          {\n            withCredentials: true,\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res)\n          navigate(`/posts/${res.data.post._id}`);\n        });\n    } catch (err) {\n      console.log(err)\n      alert(err.response.data.message);\n      setIsLoading(false)\n    }\n  };\n    \n    \n    \n    return {\n        handleAddFeild,\n        handleChange2,\n        handleSubmit,\n        title,\n        links,\n        image,\n        body,\n        counter,\n        setBody,\n        setImage,\n        setTitle,\n        setCounter,\n        isLoading\n    }\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;IAAES,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACvBP,QAAQ,CAAEa,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;MAAEZ,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,MAAMY,aAAa,GAAGA,CAACC,KAAK,EAAEC,SAAS,EAAEC,KAAK,KAAK;IACjD,MAAMC,kBAAkB,GAAG,CAAC,GAAGnB,KAAK,CAAC;IACrCmB,kBAAkB,CAACH,KAAK,CAAC,CAACC,SAAS,CAAC,GAAGC,KAAK;IAE5CjB,QAAQ,CAACkB,kBAAkB,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;IACrDf,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMhB,KAAK,CACRgC,IAAI,CACF,GAAEJ,WAAY,QAAO,EACtB;QAAEnB,KAAK;QAAEN,KAAK;QAAEE,KAAK;QAAEM;MAAK,CAAC,EAC7B;QACEsB,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC,CACAC,IAAI,CAAEC,GAAG,IAAK;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBnB,QAAQ,CAAE,UAASmB,GAAG,CAACG,IAAI,CAACP,IAAI,CAACQ,GAAI,EAAC,CAAC;MACzC,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAChBC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC;MAChC5B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAIC,OAAO;IACHE,cAAc;IACdE,aAAa;IACbK,YAAY;IACZtB,KAAK;IACLE,KAAK;IACLI,KAAK;IACLE,IAAI;IACJE,OAAO;IACPD,OAAO;IACPF,QAAQ;IACRN,QAAQ;IACRU,UAAU;IACVC;EACJ,CAAC;AACL,CAAC;AAACb,EAAA,CAjEWD,MAAM;EAAA,QAOAF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}