{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getPost = createAsyncThunk('post/getPost', async id => {\n  const backEndLink = process.en;\n  try {\n    const response = await axios.get(`${backEndLink}/posts/${id}`, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    console.error('error', error);\n  }\n});\nexport const likePost = createAsyncThunk('post/likePost', async id => {\n  const backEndLink = process.env.REACT_APP_BACKEND_URL;\n  try {\n    const response = await axios.post(`${backEndLink}/posts/${id}/like`, null, {\n      withCredentials: true\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('error:', error);\n  }\n});\nconst initialState = {\n  post: {},\n  isLoading: true\n};\nconst postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPost.pending, state => {\n      state.isLoading = true;\n    }).addCase(getPost.fulfilled, (state, action) => {\n      state.post = action.payload;\n      state.isLoading = false;\n    }).addCase(getPost.rejected, (state, action) => {\n      console.log(action);\n      state.isLoading = false;\n    });\n    builder.addCase(likePost.fulfilled, (state, action) => {\n      state.post = action.payload.post;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","getPost","id","backEndLink","process","en","response","get","withCredentials","data","error","console","likePost","env","REACT_APP_BACKEND_URL","post","log","initialState","isLoading","postSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/adnan/Desktop/projects/setup/client-side/src/store/postSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getPost = createAsyncThunk('post/getPost', async (id) => {\n    const backEndLink = process.en\n    try {\n        const response = await axios.get(`${backEndLink}/posts/${id}`, { withCredentials: true })\n        return response.data\n    } catch (error) {\n        console.error('error', error)\n    }\n})\nexport const likePost = createAsyncThunk('post/likePost', async (id) => {\n    const backEndLink = process.env.REACT_APP_BACKEND_URL\n    try{\n        const response = await axios.post(`${backEndLink}/posts/${id}/like`, null, { withCredentials: true })\n        console.log(response.data)\n        return response.data\n    }catch(error){\n        console.error('error:', error)\n    }\n})\n\nconst initialState = {\n    post: {},\n    isLoading: true,\n}\n\nconst postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(getPost.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(getPost.fulfilled, (state, action) => {\n                state.post = action.payload\n                state.isLoading = false\n            })\n            .addCase(getPost.rejected, (state, action) => {\n                console.log(action)\n                state.isLoading = false\n            })\n            builder.addCase(likePost.fulfilled, (state, action) => {\n                state.post = action.payload.post\n            })            \n    }\n})\n\nexport default postSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAGH,gBAAgB,CAAC,cAAc,EAAE,MAAOI,EAAE,IAAK;EAClE,MAAMC,WAAW,GAAGC,OAAO,CAACC,EAAE;EAC9B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEJ,WAAY,UAASD,EAAG,EAAC,EAAE;MAAEM,eAAe,EAAE;IAAK,CAAC,CAAC;IACzF,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EACjC;AACJ,CAAC,CAAC;AACF,OAAO,MAAME,QAAQ,GAAGd,gBAAgB,CAAC,eAAe,EAAE,MAAOI,EAAE,IAAK;EACpE,MAAMC,WAAW,GAAGC,OAAO,CAACS,GAAG,CAACC,qBAAqB;EACrD,IAAG;IACC,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAAE,GAAEZ,WAAY,UAASD,EAAG,OAAM,EAAE,IAAI,EAAE;MAAEM,eAAe,EAAE;IAAK,CAAC,CAAC;IACrGG,OAAO,CAACK,GAAG,CAACV,QAAQ,CAACG,IAAI,CAAC;IAC1B,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,QAAMC,KAAK,EAAC;IACTC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AACJ,CAAC,CAAC;AAEF,MAAMO,YAAY,GAAG;EACjBF,IAAI,EAAE,CAAC,CAAC;EACRG,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGpB,WAAW,CAAC;EAC1BqB,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACvB,OAAO,CAACwB,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACR,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDM,OAAO,CAACvB,OAAO,CAAC0B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAACX,IAAI,GAAGa,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACR,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC,CACDM,OAAO,CAACvB,OAAO,CAAC6B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC1CjB,OAAO,CAACK,GAAG,CAACY,MAAM,CAAC;MACnBF,KAAK,CAACR,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAACZ,QAAQ,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACX,IAAI,GAAGa,MAAM,CAACC,OAAO,CAACd,IAAI;IACpC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeI,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}